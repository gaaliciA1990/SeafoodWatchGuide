@using ContosoCrafts.WebSite.Models
@using ContosoCrafts.WebSite.Services
@using Microsoft.AspNetCore.Components.Web
@using ContosoCrafts.WebSite.Data
@inject JsonFileProductService ProductService
@code
{
    ProductModel selectedProduct;
    string selectedProductId;

    [Parameter]
    public string region { get; set; }

    // This code selects a product to display with a click and gets the ratings for that given product
    void SelectProduct(string productId)
    {
        selectedProductId = productId;
        selectedProduct = ProductService.GetAllData().First(x => x.Id == productId);
    }
}
@{var regionData = ProductService.GetRegionData(region);}


<span> &nbsp; &nbsp; &nbsp;</span>

<!-- This section of HTML is the formatting for how the products are displayed in their
    individual cards. This can be updated to work with new data and rearranged if needed,
    but this data can also be bucketed into contained within a page.
    -->
@foreach (ProductRating ev in Enum.GetValues(typeof(ProductRating)))
{
    var myStyle = "";
    var title = "";
    var collapse = "";
    if (ev == ProductRating.BEST_CHOICE)
    {
        myStyle = "color: green;";
        title = "Best Choice";
        collapse = "collapse1";
    }
    else if (ev == ProductRating.GOOD_ALTERNATIVE)
    {
        myStyle = "color: yellow;";
        title = "Good Alternative";
        collapse = "collapse2";
    }
    else if (ev == ProductRating.AVOID)
    {
        myStyle = "color: red;";
        title = "Avoid";
        collapse = "collapse3";
    }

    <a data-toggle="collapse" aria-expanded="false"  href=#@collapse>
        <h2 class="red-text" style="@myStyle">@title</h2>
    </a>

    <div id=@collapse class="collapse">
        <div class="card-columns">
            @foreach (var product in regionData)
            {
                if (product.Rating == ev)
                {
                    <div class="card">
                        <div class="card-img" style="background-image: url('@product.Image');">
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@product.Title</h5>
                        </div>
                        <div class="card-footer">
                            <small class="text-muted">
                                <button @onclick="(e => SelectProduct(product.Id))" data-toggle="modal" data-target="#productModal" class="btn btn-primary">More Info</button>
                            </small>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
}


@if (selectedProduct != null)
{
    <div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="productTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="productTitle">@selectedProduct.Title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="card">
                        <div class="card-img" style="background-image: url('@selectedProduct.Image');">
                        </div>
                        <div class="card-body">
                            <p class="card-text">@selectedProduct.Description</p>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    @if (selectedProduct.Rating == ProductRating.BEST_CHOICE)
                    {
                        <div class="card-footer bg-success text-white">@ProductModel.convertToString(selectedProduct.Rating)</div>
                    }
                    else if (selectedProduct.Rating == ProductRating.GOOD_ALTERNATIVE)
                    {
                        <div class="card-footer bg-warning text-white">@ProductModel.convertToString(selectedProduct.Rating)</div>
                    }
                    else
                    {
                        <div class="card-footer bg-danger text-white">@ProductModel.convertToString(selectedProduct.Rating)</div>
                    }
                </div>
            </div>
        </div>
    </div>
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
